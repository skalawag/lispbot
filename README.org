<<<<<<< HEAD
See the author's README below. It appears to be out of date,
particularly with regard to the instructions for starting the
bot. Evaluating following at the repl works for me:

#+BEGIN_SRC lisp
    (setq bot (make-instance 'bot :nick "lispbot" :channels "#some-irc-channel" :plugins (list 'bot.plugins:sheep-plugin 'bot.plugins:roulette-plugin)))
    (bot:start bot "irc.freenode.net")
#+END_SRC



#+BEGIN_QUOTE
README
******

1 Basic Usage
*************

Here is a brief description of a few quick steps to get the Lispbot up
and running.

Firstly you have to install and/or load the bot. See INSTALL, for
details.

Then you have to create a bot instance. This is done by:

     (make-bot "nick" "#mychannel" :plugins '(plugin1 plugin2...))

The second argument can also be a list of channels. The bot will join
them all.

The plugins can either be the classname of a plugin (e.g.
'bot-plugins:help-plugin), an instance of a plugin or a list of any of
those.

For example:

     (bot:make-bot "lispbot" '("#chan1" "#chan2")
                   :plugins (list 'bot.plugins:help-plugin
                                  'bot.plugins:dice-plugin
                                  (make-instance 'bot.plugins:greet-plugin
                                                 :greet-new-users t))

To let the bot connect to a server and start, type:

     (bot:start bot "example.com")

You can stop the bot by interrupting the read-loop (typically `C-c').
It will automatically disconnect from the server.
#+END_QUOTE
=======
* README for contest submission
** Running the game
Clone this branch of the Lispbot repository and edit my-startbot.lisp
as needed. Create the irc-channel you chose. Then load
my-startbot.lisp into the REPL.

** Git history
The development of this plugin has undergone a couple of iterations in
more than two repositories. This is partly because I made a couple of
restarts from scratch, and partly because I don't know how to use git
very well, yet.

If the judges or contest administrators want to see more of the
history of the parts of this plugin (for instance, to verify that the
development occurred within the contest time-frame), I've pushed the
relevant repositories to github for reference. They are as follows:

- [[https://github.com/skalawag/cl-poker][cl-poker]]

  This was the origin of all this code, begun on June 25th.

- [[https://github.com/skalawag/hand-evaluator][hand evaluator]]

  This is a rewrite of the hand-evaluator in cl-poker, substantially
  the same as (probably identical to) the code in the plugin.

- [[https://github.com/skalawag/cl-poker-2][cl-poker-2]]

  This is a rewrite of the poker code in cl-poker, which uses the newer
  hand-evaluator.

- Finally, in this repository, I pulled together the best parts of
  those projects, added the plugin code, and debugged the poker code.

- =Sigh= Sorry for the mess.
>>>>>>> poker-submission-monolithic-sans-tests
